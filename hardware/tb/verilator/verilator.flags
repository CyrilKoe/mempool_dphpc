// Copyright 2020 ETH Zurich and University of Bologna.
//
// SPDX-License-Identifier: Apache-2.0
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Verilator flags that are independent of the configuration

// Warnings
-Wall
-Wno-BLKANDNBLK
-Wno-LITENDIAN
-Wno-CASEINCOMPLETE
-Wno-CMPCONST
-Wno-WIDTH
-Wno-WIDTHCONCAT
-Wno-UNSIGNED
-Wno-UNUSED
-Wno-UNOPTFLAT
-Wno-fatal

// C++ mode and flags
--cc
-O3
-CFLAGS "-std=c++11 -Wall -DVM_TRACE_FMT_FST -g -O3"
-LDFLAGS "-pthread -lutil -lelf"

// Specifies the maximum number of loop iterations that may be unrolled.
// This is necessary for the SRAM model where we have blocking assignments in
// for loops, which only works if we unroll them.
--unroll-count 256

// Display the prints from time to time.
--autoflush

// Build the executable
--exe

// Evaluate the performance gain
// --threads

// Gain more insights on the signals that Verilator failed to optimize
// --report-unoptflat

// Build the model hierarchical. For MinPool, a non-hierarchical model might be faster
--hierarchical
